/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 * };
 */

class Solution
{
public:
    bool isBalanced(TreeNode* root)
    {
        if (!root)
            return true;

        if (std::abs(height(root->left) - height(root->right)) <= 1)
            return true;

        if (isBalanced(root->left) && isBalanced(root->right))
            return true;

        return false;
    }

    int height(TreeNode* node)
    {
        if (!node) return 0;

        int h_l = height(node->left);
        int h_r = height(node->right);

        return 1 + std::max(h_l, h_r);
    }
};
