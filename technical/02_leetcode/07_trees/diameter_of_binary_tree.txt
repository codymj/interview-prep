/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 * };
 */

class Solution
{
public:
    int diameterOfBinaryTree(TreeNode* root)
    {
        if (!root) return 0;

        int max_d = 0;
        dfs(root, max_d);

        return max_d;
    }

    int dfs(TreeNode* node, int& max_d)
    {
        if (!node) return 0;

        int h_l = dfs(node->left, max_d);
        int h_r = dfs(node->right, max_d);
        max_d = std::max(max_d, h_l + h_r);

        return 1 + std::max(h_l, h_r);
    }
};
