/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 * };
 */

class Solution
{
public:
    bool isSubtree(TreeNode* root, TreeNode* subRoot)
    {
        if (!root)
            return false;
        else if (isSameTree(root, subRoot))
            return true;
        else
            return
            (
                isSubtree(root->left, subRoot) ||
                isSubtree(root->right, subRoot)
            );
    }

    bool isSameTree(TreeNode* t1, TreeNode* t2)
    {
        if (!t1 || !t2)
            return !t1 && !t2;
        else if (t1->val == t2->val)
            return
            (
                isSameTree(t1->left, t2->left) &&
                isSameTree(t1->right, t2->right)
            );
        else
            return false;
    }
};
